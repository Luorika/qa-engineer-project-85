---
functional:
  - пользователь может зарегистрироваться с помощью электронной почты и пароля
  - пользователь может войти через GitHub или Discord
  - у пользователя есть возможность создать новую игру
  - пользователь может выбрать игру с другим пользователем или ботом
  - пользователь может ждать второго игрока или поделиться ссылкой на игру
  - игра высвечивается как "доступная для подключения" у других пользователей
  - когда второй игрок присоединяется к игре, игроки переходят в игровое поле
  - у пользователя есть возможность выбрать язык программирования
  - в игровом поле отображается два редактора, свой и соперника
  - в игровом поле отображаются задание, время игры и чат
  - каждый игрок видит код своего соперника в режиме он-лайн
  - каждый игрок имеет кнопку для проверки своего решения
  - если один игрок вылетает из игры, второй может продолжать играть, а первый переподключиться, пока игра не закончена
  - когда один из игроков находит верное решение, обоим игрокам высвечивается модальное окно, где написано, кто является победителем этой игры
  - победитель-игрок может выйти из игры по нажатию кнопки "exit", которая у него появилась
  - соперник может выйти, а может доиграть до конца
  - когда оба игрока вышли, игра считается полностью законченной и удаляется из памяти
non-functional:
  - cайт должен быть разработан с учетом удобства использования и оптимизирован для скорости работы
  - cайт должен быть безопасным и защищать данные пользователя
  - cайт должен быть удобным на мобильном устройстве
  - cайт должен быть протестирован на совместимость с последними версиями браузеров
  - cайт должен быть способен обрабатывать большое количество трафика (например, 1000 одновременных пользователей) 
implicit:
  - у игры должна быть документация или подсказки для быстрого освоения игры
  - в игре должен быть выбор задач по сложности и тематике
  - задачи должны быть проверены на корректность
  - база задач должна регулярно обновляться
  - наличие чата для обсуждения и обмена опытoм

