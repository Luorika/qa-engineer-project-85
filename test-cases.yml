---
- summary:
    Успешная регистрация нового пользователя через email
  requirement:
    При верном заполнении всех полей формы пользователь должен успешно зарегистрироваться
  prerequisites:
    Открыта форма регистрации
  test-data:
    Логин = tanuki Email = t4043325@gmail.com Пароль = FunTan11
  steps:
    - Вводим логин
    - Вводим email
    - Вводим пароль
    - Нажимаем "Зарегистрироваться"
  expected-result:
    Пользователь должен зарегистрироваться

- summary:
    Успешная регистрация нового пользователя через GitHub
  requirement:
    При наличии профиля на GitHub и нажатии кнопки "Войти через GitHub" пользователь должен успешно зарегистрироваться
  prerequisites:
    Открыта страница регистрации. На GitHub создан профиль Tanuki Test.
  test-data:
    Логин = Tanuki Test Пароль = FunTan12
  steps:
    - Нажимаем кнопку "Войти через GitHub"
    - Вводим логин
    - Вводим пароль
    - Нажимаем "Зарегистрироваться"
  expected-result:
    Пользователь должен зарегистрироваться

- summary:
    Успешная регистрация нового пользователя через Discord
  requirement:
    При наличии профиля на Discord и нажатии кнопки "Войти через Discord" пользователь должен успешно зарегистрироваться
  prerequisites:
    Открыта страница регистрации. На Discord создан профиль Tanukitest.
  test-data:
    Email = t4043325@gmail.com Пароль = FunTan13
  steps:
    - Нажимаем кнопку "Войти через Discord"
    - Вводим email
    - Вводим пароль
    - Нажимаем "Зарегистрироваться"
  expected-result:
    Пользователь должен зарегистрироваться

- summary:
    Проверка регистрации при отправке формы регистрации без заполнения обязательных полей
  requirement:
    При попытке отправить формы регистрации с пустыми полями пользователь должен получить сообщение о необходимости заполнения обязательных полей 
  prerequisites:
    Открыта страница регистрации 
  test-data:
    Логин = " " Email = " " Пароль = " " 
  steps:
    - Оставляем все поля пустыми
    - Нажимаем "Зарегистрироваться"
  expected-result:
    Пользователь должен получить сообщение о необходимости заполнения обязательных полей

- summary:
    Проверка регистрации при вводе некорректного email
  requirement:
    При вводе некорректного email пользователь должен получить сообщение о неправильном формате email  
  prerequisites:
    Открыта страница регистрации 
  test-data:
    Логин = Aabb Email = email.com Пароль = 333333 
  steps:
    - Вводим логин
    - Вводим email
    - Вводим пароль
    - Нажимаем "Зарегистрироваться"
  expected-result:
    Пользователь должен получить сообщение о неправильном формате email

- summary:
    Проверка регистрации при вводе несовпадающих паролей
  requirement:
    При вводе несовпадающих паролей пользователь должен получить сообщение об ошибке, что пароли не совпадают 
  prerequisites:
    Открыта страница регистрации 
  test-data:
    Логин = Aadd Email = email@mail.com Пароль = 333444 Подтверждение пароля = 444333 
  steps:
    - Вводим логин
    - Вводим email
    - Вводим пароль
    - Вводим подтверждение пароля
    - Нажимаем "Зарегистрироваться"
  expected-result:
    Пользователь должен получить сообщение об ошибке, что пароли не совпадают

- summary:
    Проверка регистрации при вводе уже зарегистрированного email
  requirement:
    При вводе зарегистрированного email пользователь должен получить сообщение, что данный email уже используется 
  prerequisites:
    Открыта страница регистрации 
  test-data:
    Логин = Aadd Email = t4043325@gmail.com Пароль = 333444 
  steps:
    - Вводим логин
    - Вводим email
    - Вводим пароль
    - Вводим подтверждение пароля
    - Нажимаем "Зарегистрироваться"
  expected-result:
    Пользователь должен получить сообщение, что данный email уже используется 

- summary:
    Успешный вход пользователя с существующими логином и паролем
  requirement:
    При верном вводе логина и пароля пользователь должен войти в систему
  prerequisites:
    Открыта форма ввода логина и пароля
  test-data:
     Логин = tanuki Пароль = FunTan11
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем "Войти"
  expected-result:
    Пользователь должен войти в систему

- summary:
    Проверка входа пользователя с несуществующими логином и паролем
  requirement:
    При вводе неправильного логина или пароля пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта форма ввода логина и пароля
  test-data:
     Логин = tntntn Пароль = 111111
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем "Войти"
  expected-result:
    Пользователь должен получить сообщение об ошибке

- summary:
    Успешное восстановление пароля
  requirement:
    При нажатии кнопки "Восстановить пароль" пользователь может восстановить пароль по ссылке, полученной через email
  prerequisites:
    Открыта форма ввода логина и пароля
  test-data:
     Email = t4043325@gmail.com Пароль = Tanuki0102
  steps:
    - Нажимаем кнопку "Восстановить пароль" 
    - Открываем email
    - Переходим по ссылке
    - Вводим новый пароль 
  expected-result:
    Пользователь может восстановить пароль по ссылке, полученной через email    

- summary:
    Успешное создание новой игры c ботом
  requirement:
    При нажатии кнопки "Создать игру" пользователь может создать новую игру с ботом
  prerequisites:
    Выполнен вход на сайт с логина tanuki. Открыта главная страница.
  test-data:
    Без данных
  steps:
    - Нажимаем кнопку "Создать игру"
    - Выбираем игру с ботом 
    - Нажимаем кнопку "Создать игру"
  expected-result:
    Должна открыться страница с новой игрой

- summary:
    Успешное создание игры с другим пользователем 
  requirement:
    Пользователь может создать новую игру с другим пользователем
  prerequisites:
    Выполнен вход на сайт с логина tanuki. Открыта главная страница.
  test-data:
    Без данных
  steps:
    - Нажимаем кнопку "Создать игру" 
    - Выбираем тип игры "С другим пользователем"
    - Нажимаем кнопку "Создать игру"
  expected-result:
    Должна открыться страница с ожиданием другого игрока

- summary:
    Успешное создание корректной ссылки на игру
  requirement:
    При выборе типа игры с другим пользователем создается ссылка, которой можно поделиться с другим игроком
  prerequisites:
    Выполнен вход на сайт с логина tanuki. Открыта страница создания новой игры.
  test-data:
    Без данных
  steps:
    - Выбираем тип игры "С другим пользователем"
    - Нажимаем кнопку "Создать игру"
  expected-result:
    Должна создаться корректная ссылка на игру

- summary:
    Успешный выбор второго игрока при создании игры с другом
  requirement:
    При создании игры с другом пользователь может выбрать второго игрока
  prerequisites:
    Выполнен вход на сайт с логина tanuki. Открыта страница создания новой игры.
  test-data:
    Без данных
  steps:
    - Выбираем тип игры "С другом"
    - Нажимаем кнопку "Выбрать оппонента"
    - Выбираем пользователя bubu test
  expected-result:
    При создании игры с другом пользователь может выбрать второго игрока

- summary:
    Успешная отправка приглашения в игру при создании игры с другом
  requirement:
    При создании игры с другом выбранному пользователю отправляется приглашение в игру
  prerequisites:
    Выполнен вход на сайт с логина tanuki. Открыта страница создания новой игры. 
  test-data:
    Без данных
  steps:
    - Выбираем тип игры "С другом"
    - Выбираем пользователя bubu test 
    - Нажимаем кнопку "Создать игру"
  expected-result:
    На странице должно отобразиться, что приглашение в игру отправлено

- summary:
    Успешный прием приглашения в игру 
  requirement:
    У пользователя есть возможность принять приглашение в игру
  prerequisites:
    С профиля игрока tanuki создана игра с другом и отправлено приглашение пользователю bubu test. Пользователь bubu test авторизован на сайте и открыл главную страницу. 
  test-data:
    Без данных
  steps:
    - Открываем приглашение
    - Нажимаем "Принять" 
  expected-result:
    Пользователь может принять приглашение и перейти в игровое поле

- summary:
    Проверка возможности отменить приглашение в игру, отправленное другому пользователю 
  requirement:
    У пользователя есть возможность отменить отпрвленное приглашение
  prerequisites:
    С профиля игрока tanuki создана игра с другом и отправлено приглашение пользователю bubu test.  
  test-data:
    Без данных
  steps:
    - Открываем приглашение
    - Нажимаем "Отклонить" 
  expected-result:
    Пользователь может отменить отправленное приглашение в игру   

- summary:
    Проверка статуса игры "доступная для подключения"
  requirement:
    При создании новой игры с другим пользователем у других пользователй игра видна как доступная для подключения
  prerequisites:
    В браузере Firefox выполнен вход на сайт с логина tanuki и создана новая игра с другим пользователем. В браузере Google Chrome выполенен вход с профиля bubu и открыта главная страница.
  test-data:
    Без данных
  steps:
    - Смотрим статус игры
  expected-result:
    На главной странице должна отображатся доступная для подключения игра, созданная игроком tanuki    

- summary:
    Успешное подключение к игре другого пользователя
  requirement:
    Пользователь может присоединиться к новой игре, созданной другим пользователем 
  prerequisites:
    В браузере Firefox выполнен вход на сайт с логина tanuki и создана новая игра с другим пользователем. В браузере Google Chrome выполенен вход с профиля bubu и открыта главная страница.
  test-data:
    Без данных
  steps:
    - С профиля bubu нажимаем кнопку "Подключиться к игре"
  expected-result:
    Пользователь может присоединиться к новой игре, созданной другим пользователем

- summary:
    Проверка корректной работы подсказок
  requirement:
    В игровом поле должна работать подсказка для быстрого освоения игры
  prerequisites:
    Выполнен вход с логина tanuki. Открыта страница игрового поля.
  test-data:
    Без данных
  steps:
    - Нажимаем кнопку, вызывающую подсказку
  expected-result:
    В игровом поле должна работать подсказка для быстрого освоения игры

- summary:
    Проверка возможности выбрать русский язык интерфейса
  requirement:
    У пользователя должна быть возможность выбрать русский язык
  prerequisites:
    Авторизован пользователь tanuki. Открыта страница игрового поля.
  test-data:
    Без данных
  steps:
    - Нажимаем кнопку выбора языка
    - Выбираем русский язык
  expected-result:
    Все надписи должны отобразиться на русском языке  

- summary:
    Успешный выбор языка программирования
  requirement:
    У игрока есть возможность выбрать язык программирования
  prerequisites:
    Выполнен вход с логина tanuki. Создана игра с ботом, открыта страница игрового поля.
  test-data:
    Без данных
  steps:
    - Нажимаем кнопку выбора языка программирования
    - Выбираем язык Phyton
  expected-result:
    В игровом редакторе игрока должен отобразиться язык программирования Phyton

- summary:
    Корректное отображение кода двух игроков в режиме онлайн
  requirement:
    Каждый игрок должен видеть код своего соперника в режиме онлайн
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu.
  test-data:
    Код = 1()1
  steps:
    - С профиля tanuki вводим код
  expected-result:
     Код должен отобразиться в редакторах обоих игроков

- summary:
    Успешное переподключение к игре в случае вылета из нее
  requirement:
    Игрок должен иметь возможность переподключиться, если вылетает из игры, пока игра не закончена
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu. 
  test-data:
    Без данных
  steps:
    - Через вкладку Network в DevTools выбираем режим Offline для игрока tanuki
    - Перезагружаем страницу
    - Через вкладку Network в DevTools выбираем скорость "без ограничений" для игрока tanuki 
  expected-result:
    Пользователь должен успешно вернуться в игру

- summary:
    Успешное продолжение игры первым игроком при вылете из игры второго игрока
  requirement:
    Игрок должен иметь возможность продолжить игру при вылете соперника из игры
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu.
  test-data:
    Код = 1111  
  steps:
    - Через вкладку Network в DevTools выбираем режим Offline для игрока tanuki
    - С профиля игрока bubu вводим код в редакторе  
  expected-result:
    Игрок должен иметь возможность продолжить игру при вылете соперника из игры

- summary:
    Проверка возможности сдаться в игре
  requirement:
    У игрока есть возможность сдаться при нажатии кнопки
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu.
  test-data:
    Без данных  
  steps:
    - Нажимаем кнопку "Сдаться"
  expected-result:
    Должно появиться сообщение, что игрок сдается  

- summary:
    Успешное отображение победителя в игре
  requirement:
    Когда игрок находит верное решение, обоим игрокам должно высветиться модальное окно с указанием победителя в этой игре
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu. Задача "split_names".
  test-data:
    Код = names.map(name => name.split(' ')).map(([first, last]) => ({ first, last }));
  steps:
    - С профиля игрока tanuki вводим правильное решение задачи
  expected-result:
    Обоим игрокам должно высветиться модальное окно с указанием победителя в этой игре

- summary:
    Успешный выход из игры в случае победы
  requirement:
    Победитель-игрок может выйти из игры по нажатию кнопки "exit", которая у него появилась
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu. Игрок tanuki ввел верное решение задачи.
  test-data:
    Без данных
  steps:
    - Нажимаем кнопку "exit"
  expected-result:
    Победивший пользователь должен успешно выйти из игры

- summary:
    Успешное продолжение игры вторым игроком в случае победы первого игрока
  requirement:
    Игрок должен иметь возможность доиграть до конца в случае победы сопернка и его выхода из игры
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu. Задача "split_names". Игрок tanuki выиграл и вышел из игры. 
  test-data:
    Код = names.map(name => name.split(' ')).map(([first, last]) => ({ first, last }));
  steps:
    - Игрок bubu вводит в редакторе код
  expected-result:
    Игрок должен иметь возможность доиграть до конца в случае победы сопернка и его выхода из игры

- summary:
    Проверка работы кнопки для проверки при вводе правильного решения
  requirement:
    При нажатии кнопки проверки в случае ввода правильного решения должно появиться сообщение, что решение верное
  prerequisites:
    Создана игра с ботом и пользователем tanuki. Задача "split_names". ЯП - Node.js 
  test-data:
    Код = names.map(name => name.split(' ')).map(([first, last]) => ({ first, last }));
  steps:
    - Игрок bubu вводит в редакторе код
    - Нажимаем кнопку проверки решения
  expected-result:
    Должно появиться сообщение, что решение верное
   
- summary:
    Проверка работы кнопки для проверки при вводе неправильного решения
  requirement:
    При нажатии кнопки проверки в случае ввода неправильного решения должно появиться сообщение, что решение неверное
  prerequisites:
    Создана игра с ботом и пользователем tanuki. Задача "split_names". ЯП - Node.js  
  test-data:
    Код = 1.1.1
  steps:
    - Вводим в редакторе код
    - Нажимаем кнопку проверки решения  
  expected-result:
    Должно появиться сообщение, что решение верное

- summary:
    Проверка корректного сообщения об отсутствии победителя 
  requirement:
    Если время игры истекло и игроки не нашли решения, должно появиться сообщение, что в игре нет победителя
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu. Время игры истекло.
  test-data:
    Без данных
  steps:
    - Смотрим сообщение об отстуствии победителя 
  expected-result:
     Если время игры истекло и игроки не нашли решения, должно появиться сообщение, что в игре нет победителя    

- summary:
    Проверка корректного окончания игры, когда оба игрока вышли из нее
  requirement:
    Когда оба игрока выходят из игры, игра перестает отображаться на главной странице 
  prerequisites:
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Игра между tanuki и bubu закончена, игрок tanuki вышел из игры.
  test-data:
    Без данных
  steps:
    - Игрок bubu нажимает кнопку "exit"
    - Открываем главную страницу
  expected-result:
    Игра перестает отображаться на главной странице 

- summary:
    Проверка корректной работы чата
  requirement:
    Любой пользователь может написать в чат сообщение
  prerequisites:    
    В браузере Firefox выполнен вход с логина tanuki, в Google Chrome - с логина bubu. Открыта страница игры между tanuki и bubu.
  test-data:
    Сообщение = 111 Сообщение = ааа
  steps:
    - Игрок bubu отправляет сообщение "111"
    - Игрок tanuki отправляет сообщение "ааа" 
  expected-result:
    В чате должны отобразиться сообщения от обоих пользователей.

- summary:
    Успешное создание турнира
  requirement:
    У пользователя есть возможность создать турнир
  prerequisites:    
    Авторизован пользователь tanuki. Открыта страница создания турнира
  test-data:
    Name = my tournament Description = first tournament
  steps:
    - Вводим название
    - Вводим описание
    - Выбираем любые параметры
    - Нажимаем "Создать турнир" 
  expected-result:
    Должна открыться страница нового турнира

- summary:
    Проверка возможности просматривать завершенные игры пользователя
  requirement:
    У пользователя должна быть возможность просмотреть все игры с его участием
  prerequisites:    
    Авторизован пользователь bubu test
  test-data:
    Без данных
  steps:
    - Нажимаем кнопку "Мой профиль"
    - Нажимаем кнопку "Завершенные игры"
  expected-result:
    Должна открыться страница со всеми играми пользователя

- summary:
    Проверка возможности просматривать рейтинг игроков за неделю, месяц и за все время
  requirement:
    У пользователя должна быть возможность просматривать рейтинг игроков за неделю, месяц и за все время
  prerequisites:    
    Авторизован пользователь bubu test
  test-data:
    Без данных
  steps:
    - Нажимаем кнопку "Users rating"
    - ВЫбираем "weekly"
    - Выбираем "monthly"
    - Выбираем "total"
  expected-result:
    Должна открыться страница с рейтингом игроков с возможность выбора рейтинга за неделю, месяц и за все время 

- summary:
    Проверка возможности просматривать профиль другого пользователя
  requirement:
    У пользователя должна быть возможность просматривать профиль любого другого пользователя
  prerequisites:    
    Авторизован пользователь bubu test. Открыта главная страница.  
  test-data:
    Без данных
  steps:
    - Выбираем любого пользователя
    - Нажимаем на никнейм
  expected-result:
    Должен открыться профиль выбранного пользователя  

- summary:
    Проверка возможности просматривать результатов игры других пользователей
  requirement:
    У пользователя должна быть возможность просматривать результаты игры других пользователей
  prerequisites:    
    Авторизован пользователь bubu test. Открыта главная страница.  
  test-data:
    Без данных
  steps:
    - Выбираем любую игру
    - Нажимаем кнопку "Show"
  expected-result:
    Должна открыться страница с результатами выбранной игры  


    



    
